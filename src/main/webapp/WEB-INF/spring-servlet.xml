<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd ">
    <context:component-scan base-package="controller,service, dal, configuration" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.RestController"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
        <context:include-filter type="annotation" expression="org.springframework.context.annotation.Configuration"/>
    </context:component-scan>
    <mvc:annotation-driven/>

    <bean id="swagger2Config"
          class="springfox.documentation.swagger2.configuration.Swagger2DocumentationConfiguration">
    </bean>

    <mvc:resources order="1" location="classpath:/META-INF/resources/" mapping="/resources/**" />
    <mvc:resources mapping="swagger-ui.html"
                   location="classpath:/META-INF/resources/" />
    <mvc:resources mapping="/webjars/**"
                   location="classpath:/META-INF/resources/webjars/" />

    <mvc:default-servlet-handler />

    <context:component-scan base-package="src.main.java.controller">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller" />
        <context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice" />
    </context:component-scan>

<!--    <bean id="entityManagerFactoryBean" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">-->
<!--        <property name="dataSource" ref="dataSource" />-->
<!--        &lt;!&ndash; This makes /META-INF/persistence.xml is no longer necessary &ndash;&gt;-->
<!--        <property name="packagesToScan" value="pojo" />-->
<!--        &lt;!&ndash; JpaVendorAdapter implementation for Hibernate EntityManager.-->
<!--             Exposes Hibernate's persistence provider and EntityManager extension interface &ndash;&gt;-->
<!--        <property name="jpaVendorAdapter">-->
<!--            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />-->
<!--        </property>-->
<!--        <property name="jpaProperties">-->
<!--            <props>-->
<!--                <prop key="hibernate.hbm2ddl.auto">validate</prop>-->
<!--                <prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop>-->
<!--                <prop key="hibernate.globally_quoted_identifiers">true</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--    </bean>-->

<!--    &lt;!&ndash; Simple implementation of the standard JDBC DataSource interface,-->
<!--     configuring the plain old JDBC DriverManager via bean properties &ndash;&gt;-->
<!--    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
<!--        <property name="driverClassName" value="net.sourceforge.jtds.jdbc.Driver" />-->
<!--        <property name="url" value="jdbc:jtds:sqlserver://secretsanta.mssql.somee.com;databaseName=secretsanta" />-->
<!--        <property name="username" value="markopyrizhok_SQLLogin_1" />-->
<!--        <property name="password" value="cywngr7wx1" />-->
<!--    </bean>-->
    <context:annotation-config />
<!--    &lt;!&ndash; This transaction manager is appropriate for applications that use a single JPA EntityManagerFactory for transactional data access.-->
<!--    JTA (usually through JtaTransactionManager) is necessary for accessing multiple transactional resources within the same transaction. &ndash;&gt;-->
<!--    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">-->
<!--        <property name="entityManagerFactory" ref="entityManagerFactoryBean" />-->
<!--    </bean>-->
    <bean name="webSecurityConfig" class="configuration.WebSecurityConfig" />
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
</beans>
